# If you come from bash you might have to change your $PATH.
export PATH=$HOME/bin:/usr/local/bin:/home/nino/.local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="robbyrussell"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
# zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"
# Prepending a space character ignores history:
setopt HIST_IGNORE_SPACE
# enhanche saved history size
HISTFILE=~/.zsh_history
HISTSIZE=999999999
SAVEHIST=$HISTSIZE

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
    # timewarrior
    copypath
    copyfile
    copybuffer
    docker
    docker-compose
    git
    zsh-autosuggestions
)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
export LANG=en_US.UTF-8
# export LC_CTYPE=en_US.UTF-8
# export LC_ALL=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
alias zshconfig="vim  ~/.zshrc"
alias vimconfig='vim ~/.vimrc'
alias ohmyzsh="mate ~/.oh-my-zsh"
alias reload-zshrc='source ~/.zshrc'
alias dotfiles='/usr/bin/git --git-dir=$HOME/.dotfiles.git/ --work-tree=$HOME'
alias dfl='dotfiles'
alias dfla='dotfiles add'
alias dflc='dotfiles commit'
alias dfls='dotfiles status'
alias ns='networksetup'
# alias ks='k9s'
alias bat='bat --color=always --style=numbers'
alias ls='ls --color=always'
alias ll='ls --color=always -lh'
alias la='ls -A'
alias fzf='fzf --reverse'
alias fzf-preview='fzf --preview="bat --color=always --style=numbers {}" --bind ctrl-space:preview-down'
alias fzf-vim='fzf --preview="vim {}"'
# alias man='batman'
alias dps='docker ps'
alias dps-live='batwatch --style=plain --command zsh -c "docker ps --all | docker-color-output"'
alias b='bat --color=always --style=numbers'
alias myip='curl http://ipecho.net/plain; echo'
alias -s md=mdless
alias git-get='git status --porcelain=v2 | rev | cut -d" " -f1 | rev | xargs echo'
alias lh='ls -Ad .*'
alias test-gnupg='echo "test" | gpg --clearsign'
alias mdless='mdcat -p'
alias bathelp='bat --plain --language=help'
alias -g awsconfig='~/.aws/config'
alias -g bJSON=' | bat --language=json'
alias -g bLOG=' | bat --language=log'
alias git-rebase-on-pulled-master='git switch master && git pull && git switch - && git rebase master && git pull --force'
# alias vk='viddy kubectl'
alias pg-start="pg_ctl -D /home/nino/Databases/ -l logfile start"
alias pg-stop="pg_ctl -D /home/nino/Databases/ -l logfile stop"
alias pg-restart="pg_ctl -D /home/nino/Databases/ -l logfile restart"
alias y="yay"
alias pbcopy='xclip -selection clipboard' 
alias cz='chezmoi'
alias czs='chezmoi status'
alias download-webpage='wget --page-requisites --convert-links --user-agent=Mozilla -nc'
alias dcp='docker-compose'

eval "$(starship init zsh)"

########## add compinit completion ##########
autoload -Uz compinit && compinit -i

########## POWERLEVEL10k #############
# source /home/nino/powerlevel10k/powerlevel10k.zsh-theme

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
# [[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

########## GPG ############
export GPG_TTY=$(tty)

########## USER DEFINED FUNCTIONS ###########

# my custom logger
#function logit() {
#    ~/Scripts/logit.sh
#}

## log in into vault  for CMLD team without opening a HC Vault subshell
## needs enable-vault-dev-envs to work properly

function review-current-branch() {
    if [[ -z $1 ]];
    then 
         MAIN_BRANCH="master"
    else
        MAIN_BRANCH=$1
    fi
    CURRENT_BRANCH="$(git branch --show-current)"
    git $@ diff --name-only "$CURRENT_BRANCH" $(git merge-base "$CURRENT_BRANCH" "$MAIN_BRANCH")
}

function review-current-branch-in-code() {
    code --new-window `review-current-branch`
}

function review-current-branch-in-vim() {
    vim `review-current-branch`
}

# use ripgrep with fzf for faster results
export FZF_DEFAULT_COMMAND='rg --files'

# colorful help messages with bat
function help() {
    "$@" --help 2>&1 | bathelp
}

# search among existing aliases
function seek-alias() {
    alias | rg $1
}

# render markdown in the terminal
#function mdbat() {
#    pandoc -t simple $1 | bat
#}

# watch file and automatically run make command when modified
# function watch-and-test() {
#     ls $1 | entr make test
# }

# switch to one o the folders in /home/nino/Repos folder
function gor() {
    if [ $# -eq 0 ]
        then
            cd /home/nino/Repos
    else
	    cd $(find /home/nino/Repos -maxdepth 1 -type d -iname "*$1*" -print -quit)
        clear
    fi
}

